// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model SailfishApikey {
  id          Int      @id @default(autoincrement())
  apiKey      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Token {
  id          Int             @id @default(autoincrement())
  name        String
  symbol      String
  totalSupply String
  decimal     Int
  logoUrl     String?
  xUrl        String?
  category    ProjectCategory @relation(fields: [categoryId], references: [id])
  categoryId  Int
  network     Network         @relation(fields: [networkId], references: [id])
  networkId   Int
  deployer    User            @relation(fields: [deployerId], references: [address])
  deployerId  String
  contract    String
  points      Int
  Liquidity   Liquidity[]
}

model Dex {
  id        Int         @id @default(autoincrement())
  name      String
  logoUrl   String?
  Liquidity Liquidity[]
}

model ProjectCategory {
  id    Int     @id @default(autoincrement())
  name  String
  Token Token[]
}

model User {
  address String  @id
  points  Int
  Token   Token[]
}

model Liquidity {
  id          Int      @id @default(autoincrement())
  token       Token    @relation(fields: [tokenId], references: [id])
  tokenId     Int
  dex         Dex?      @relation(fields: [dexId], references: [id])
  dexId       Int?
  quoteAmount String?
  baseAmount  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Network {
  id          Int     @id @default(autoincrement())
  name        String
  logoUrl     String?
  chainId     Int
  explorerUrl String?
  Token       Token[]
}
